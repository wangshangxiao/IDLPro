;
; 蒙继华
; 20060824省级农情遥感监测系统中的汇总模块
; 在原来全国长势遥感监测系统的基础上修改而成

;20060930,开始对程序进行修改,
;系统开发的程序是这样的,先做了过程监测中的汇总模块,
;然后在过程监测汇总模块的基础上做实时监测的汇总模块


;2006.11.17开始全面对该模块代码进行修改
;-----------------------------------------------------------------

FUNCTION ZS_COUNT_STA_RT_ABOVE_COUNTY,RANGE_NAME,RANGE_CODE,YEAR,MONTH,DAY,DATA_TYPE,SCALE,$
                           SENSOR_CODE,PERIOD

    ;,RANGE_NAME,RANGE_CODE,YEAR,MONTH,DAY,DATA_TYPE,DBCO,SCALE,SENSOR_CODE,PERIOD
    ;上面是过程监测中的参数,供实时监测的函数参考
    ;*************************************************************************************
    ;这是系统的主要函数,根据不同的尺度选择了不同的表进行查询
    ;*************************************************************************************

  	;modified 20070607
    COMMON COMMON_BLOCK,yesORno,DBobj,FILE_PATH,Year_1,DSN,USER_NAME,PWD,PROVINCE_CODE

	;PROVINCE_CODE='230000'
    ;获取传递过来的参数
    RANGE_NAME=RANGE_NAME
    RANGE_CODE=RANGE_CODE
    YEAR=YEAR
    MONTH=MONTH
    DAY=DAY
    DATA_TYPE=STRTRIM(DATA_TYPE,2)
    SENSOR_CODE=STRTRIM(SENSOR_CODE,2)
    OD=DBobj
    SCALE=SCALE
    ;IF(DATA_TYPE EQ 'NDVI') THEN DATA_TYPE='NDVI'

    ;这个年用来表示数据库中最新的作物面积数据,目前使用的是2004年的
    YEAR_GVG='2004'

    TOTAL_AREA				=0.0
	TOTAL_WEIGHT			=0.0

	ADDUP_WEIGHT_PLOWLAND	=0.0
	ADDUP_WEIGHT_PADDY_FIELD=0.0
	ADDUP_WEIGHT_DRY_LAND	=0.0

	PER_WORSE				=0.0
	PER_LITTLE_WORSE		=0.0
	PER_KEEP_BALANCE		=0.0
	PER_LITTLE_BETTER		=0.0
	PER_BETTER				=0.0

	AREA_PLOWLAND_TOTAL		=0.0
 	AREA_PADDY_FIELD_TOTAL	=0.0
 	AREA_DRY_LAND_TOTAL		=0.0
 	AREA_SPRING_WHEAT_TOTAL	=0.0
 	AREA_WINTER_WHEAT_TOTAL	=0.0
 	AREA_EARLY_RICE_TOTAL	=0.0
 	AREA_SEMILATE_RICE_TOTAL=0.0
 	AREA_LATE_RICE_TOTAL	=0.0
 	AREA_SPRING_CORN_TOTAL	=0.0
 	AREA_SUMMER_CORN_TOTAL	=0.0
 	AREA_SOYBEAN_TOTAL		=0.0

	ADD_UP_PLOWLAND		=0.0
	ADD_UP_PADDY_FIELD	=0.0
	ADD_UP_DRY_LAND		=0.0
	ADD_UP_WINTER_WHEAT	=0.0
	ADD_UP_SPRING_WHEAT	=0.0
	ADD_UP_EARLY_RICE	=0.0
	ADD_UP_SEMILATE_RICE=0.0
	ADD_UP_LATE_RICE	=0.0
	ADD_UP_MAIZE		=0.0
	ADD_UP_SOYBEAN		=0.0

	ADDUP_AREA_WINTER_WHEAT	=0.0
	ADDUP_AREA_SPRING_WHEAT	=0.0
	ADDUP_AREA_EARLY_RICE	=0.0
	ADDUP_AREA_SEMILATE_RICE=0.0
	ADDUP_AREA_LATE_RICE	=0.0
	ADDUP_AREA_SPRING_CORN	=0.0
	ADDUP_AREA_SUMMER_CORN	=0.0
	ADDUP_AREA_SOYBEAN		=0.0

	;********************************************
	ADDUP_AREA_WINTER_WHEAT_W	=0.0
	ADDUP_AREA_WINTER_WHEAT_LW	=0.0
	ADDUP_AREA_WINTER_WHEAT_K	=0.0
	ADDUP_AREA_WINTER_WHEAT_LB	=0.0
	ADDUP_AREA_WINTER_WHEAT_B	=0.0

	ADDUP_AREA_SPRING_WHEAT_W	=0.0
	ADDUP_AREA_SPRING_WHEAT_LW	=0.0
	ADDUP_AREA_SPRING_WHEAT_K	=0.0
	ADDUP_AREA_SPRING_WHEAT_LB	=0.0
	ADDUP_AREA_SPRING_WHEAT_B	=0.0

	ADDUP_AREA_EARLY_RICE_W		=0.0
	ADDUP_AREA_EARLY_RICE_LW	=0.0
	ADDUP_AREA_EARLY_RICE_K		=0.0
	ADDUP_AREA_EARLY_RICE_LB	=0.0
	ADDUP_AREA_EARLY_RICE_B		=0.0

	ADDUP_AREA_SEMILATE_RICE_W	=0.0
	ADDUP_AREA_SEMILATE_RICE_LW	=0.0
	ADDUP_AREA_SEMILATE_RICE_K	=0.0
	ADDUP_AREA_SEMILATE_RICE_LB	=0.0
	ADDUP_AREA_SEMILATE_RICE_B	=0.0

	ADDUP_AREA_LATE_RICE_W		=0.0
	ADDUP_AREA_LATE_RICE_LW		=0.0
	ADDUP_AREA_LATE_RICE_K		=0.0
	ADDUP_AREA_LATE_RICE_LB		=0.0
	ADDUP_AREA_LATE_RICE_B		=0.0

	ADDUP_AREA_SPRING_CORN_W	=0.0
	ADDUP_AREA_SPRING_CORN_LW	=0.0
	ADDUP_AREA_SPRING_CORN_K	=0.0
	ADDUP_AREA_SPRING_CORN_LB	=0.0
	ADDUP_AREA_SPRING_CORN_B	=0.0

	ADDUP_AREA_SUMMER_CORN_W	=0.0
	ADDUP_AREA_SUMMER_CORN_LW	=0.0
	ADDUP_AREA_SUMMER_CORN_K	=0.0
	ADDUP_AREA_SUMMER_CORN_LB	=0.0
	ADDUP_AREA_SUMMER_CORN_B	=0.0

	ADDUP_AREA_SOYBEAN_W		=0.0
	ADDUP_AREA_SOYBEAN_LW		=0.0
	ADDUP_AREA_SOYBEAN_K		=0.0
	ADDUP_AREA_SOYBEAN_LB		=0.0
	ADDUP_AREA_SOYBEAN_B		=0.0
	;********************************************

	ADDUP_WEIGHT_PLOWLAND_W		=0.0
	ADDUP_WEIGHT_PLOWLAND_LW	=0.0
	ADDUP_WEIGHT_PLOWLAND_K		=0.0
	ADDUP_WEIGHT_PLOWLAND_LB	=0.0
	ADDUP_WEIGHT_PLOWLAND_B		=0.0

	ADDUP_WEIGHT_PADDY_FIELD_W	=0.0
	ADDUP_WEIGHT_PADDY_FIELD_LW	=0.0
	ADDUP_WEIGHT_PADDY_FIELD_K	=0.0
	ADDUP_WEIGHT_PADDY_FIELD_LB	=0.0
	ADDUP_WEIGHT_PADDY_FIELD_B	=0.0

	ADDUP_WEIGHT_DRY_LAND_W		=0.0
	ADDUP_WEIGHT_DRY_LAND_LW	=0.0
	ADDUP_WEIGHT_DRY_LAND_K		=0.0
	ADDUP_WEIGHT_DRY_LAND_LB	=0.0
	ADDUP_WEIGHT_DRY_LAND_B		=0.0

	;NAME=STRTRIM(STRING(DATA_TYPE),2)
	;DATA_TYPE

   	;*******************************************************************************************
   	;国是由省汇总来的,与其它级别的汇总都不相同,在这里单独的提出来做
   	IF(SCALE EQ '全省') THEN BEGIN
		RANGE_CODE=PROVINCE_CODE
   		;分两步先做耕地\水田\旱地的,再做分作物类型的.
   		;*******************************************************************************
	 	;(1)先处理耕地\水田\和旱地的,(在两行星中间)
		SQL='SELECT '
		SQL=SQL+'PLOWLAND_AREA_COUNTY.PLOWLAND,'
		SQL=SQL+'PLOWLAND_AREA_COUNTY.PADDY_FIELD,'
		SQL=SQL+'PLOWLAND_AREA_COUNTY.DRY_LAND,'


		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_WORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEWORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_KEEPBALANCE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEBETTER,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_BETTER,'
		SQL=SQL+'PARAMETER_RT_COUNTY.LAND_TYPE '

	 	SQL=SQL+'FROM PLOWLAND_AREA_COUNTY,'
	 	SQL=SQL+'PARAMETER_RT_COUNTY '

	 	SQL=SQL+' WHERE (PARAMETER_RT_COUNTY.COUNTY_CODE IN '
	 	SQL=SQL+'(SELECT CODE FROM COUNTY_CODE WHERE PROVINCE_CODE='+"'"+PROVINCE_CODE+"'"+')) AND '

	 	SQL=SQL+'(PARAMETER_RT_COUNTY.COUNTY_CODE=PLOWLAND_AREA_COUNTY.COUNTY_CODE) '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.YEAR='+STRTRIM(YEAR,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.MONTH='+STRTRIM(MONTH,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DAY='+STRTRIM(DAY,2)+')'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.SENSOR_CODE='+"'"+SENSOR_CODE+"'"+')'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DATA_TYPE='+"'"+DATA_TYPE+"'"+')'

	 	PRINT,SQL
	 	PRINT,'STOP 187'


	 	ORS = OBJ_NEW('IDLDBRECORDSET', OD, SQL=SQL)
		NUM_OF_COUNTY=1
		IF(ORS->MOVECURSOR(/FIRST) EQ 1)THEN BEGIN

			;WHILE (ORS->MOVECURSOR(/NEXT) EQ 1) DO BEGIN
			REPEAT BEGIN
				NUM_OF_COUNTY		=	NUM_OF_COUNTY+1
				AREA_PLOWLAND		=	FLOAT(ORS->GETFIELD(0));把面积作为权重
				AREA_PADDY_FIELD	=	FLOAT(ORS->GETFIELD(1))
				AREA_DRY_LAND		=	FLOAT(ORS->GETFIELD(2))

				PER_W	=	FLOAT(ORS->GETFIELD(3));差
				PER_LW	=	FLOAT(ORS->GETFIELD(4));稍差
				PER_K	=	FLOAT(ORS->GETFIELD(5));持平
				PER_LB	=	FLOAT(ORS->GETFIELD(6));稍好
				PER_B	=	FLOAT(ORS->GETFIELD(7));好


				LAND_TYPE	=STRTRIM(STRING(ORS->GETFIELD(8)),2)
				;PRINT,'LAND_TYPE',LAND_TYPE
				;PRINT,LAND_TYPE,AVG_VALUE,AREA
				;!!!!!!!!为了与后面的程序保持一致,在这里用WEIGHT来表示AREA,但是只局限于耕地\水田\旱地,
				;!!!!!!!!在计算分作物类型时,仍然使用AREA作为权重
				CASE LAND_TYPE OF
					'耕地':BEGIN
						ADDUP_WEIGHT_PLOWLAND=ADDUP_WEIGHT_PLOWLAND+AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_W	=ADDUP_WEIGHT_PLOWLAND_W+PER_W*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_LW=ADDUP_WEIGHT_PLOWLAND_LW+PER_LW*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_K=ADDUP_WEIGHT_PLOWLAND_K+PER_K*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_LB=ADDUP_WEIGHT_PLOWLAND_LB+PER_LB*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_B=ADDUP_WEIGHT_PLOWLAND_B+PER_B*AREA_PLOWLAND
					END
					'水田':BEGIN
						ADDUP_WEIGHT_PADDY_FIELD=ADDUP_WEIGHT_PADDY_FIELD+AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_W	=ADDUP_WEIGHT_PADDY_FIELD_W+PER_W*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_LW=ADDUP_WEIGHT_PADDY_FIELD_LW+PER_LW*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_K=ADDUP_WEIGHT_PADDY_FIELD_K+PER_K*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_LB=ADDUP_WEIGHT_PADDY_FIELD_LB+PER_LB*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_B=ADDUP_WEIGHT_PADDY_FIELD_B+PER_B*AREA_PADDY_FIELD
					END
					'旱地':BEGIN
						ADDUP_WEIGHT_DRY_LAND=ADDUP_WEIGHT_DRY_LAND+AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_W	=ADDUP_WEIGHT_DRY_LAND_W+PER_W*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_LW=ADDUP_WEIGHT_DRY_LAND_LW+PER_LW*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_K=ADDUP_WEIGHT_DRY_LAND_K+PER_K*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_LB=ADDUP_WEIGHT_DRY_LAND_LB+PER_LB*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_B=ADDUP_WEIGHT_DRY_LAND_B+PER_B*AREA_DRY_LAND
					END
					ELSE:

				ENDCASE

			;ENDWHILE
			ENDREP UNTIL (ORS->MOVECURSOR(/NEXT) NE 1)
		ENDIF
		OBJ_DESTROY,ORS

		;(2)再处理分作物的数值(也是在两行星之间)
		SQL='SELECT '
		SQL=SQL+'CROP_AREA_COUNTY.WINTER_WHEAT,'
		SQL=SQL+'CROP_AREA_COUNTY.SPRING_WHEAT,'
		SQL=SQL+'CROP_AREA_COUNTY.EARLY_RICE,'
		SQL=SQL+'CROP_AREA_COUNTY.SEMILATE_RICE,'
		SQL=SQL+'CROP_AREA_COUNTY.LATE_RICE,'
		SQL=SQL+'CROP_AREA_COUNTY.SPRING_CORN,'
		SQL=SQL+'CROP_AREA_COUNTY.SUMMER_CORN,'
		SQL=SQL+'CROP_AREA_COUNTY.SOYBEAN,'

		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_WORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEWORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_KEEPBALANCE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEBETTER,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_BETTER,'

		SQL=SQL+'PARAMETER_RT_COUNTY.LAND_TYPE '

	 	SQL=SQL+'FROM CROP_AREA_COUNTY,'
	 	SQL=SQL+'PARAMETER_RT_COUNTY'

	 	SQL=SQL+' WHERE (PARAMETER_RT_COUNTY.COUNTY_CODE IN '
	 	SQL=SQL+'(SELECT CODE FROM COUNTY_CODE  WHERE PROVINCE_CODE='+"'"+PROVINCE_CODE+"'"+')) AND '

	 	SQL=SQL+'(PARAMETER_RT_COUNTY.COUNTY_CODE=CROP_AREA_COUNTY.COUNTY_CODE) '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.YEAR='+STRTRIM(YEAR,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.MONTH='+STRTRIM(MONTH,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DAY='+STRTRIM(DAY,2)+')'
	 	SQL=SQL+'AND (CROP_AREA_COUNTY.YEAR=2004)'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.SENSOR_CODE='+"'"+SENSOR_CODE+"'"+')'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DATA_TYPE='+"'"+DATA_TYPE+"'"+')'
	 	;上面一句中说明代码中固化了使用2004年的面积数据
	 	PRINT,SQL


	 	ORS = OBJ_NEW('IDLDBRECORDSET', OD, SQL=SQL)
		NUM_OF_COUNTY=1
		IF(ORS->MOVECURSOR(/FIRST) EQ 1)THEN BEGIN

			;WHILE (ORS->MOVECURSOR(/NEXT) EQ 1) DO BEGIN
			REPEAT BEGIN
				NUM_OF_COUNTY		=	NUM_OF_COUNTY+1
				AREA_WINTER_WHEAT	=	FLOAT(ORS->GETFIELD(0))
				AREA_SPRING_WHEAT	=	FLOAT(ORS->GETFIELD(1))
				AREA_EARLY_RICE		=	FLOAT(ORS->GETFIELD(2))
				AREA_SEMILATE_RICE	=	FLOAT(ORS->GETFIELD(3))
				AREA_LATE_RICE		=	FLOAT(ORS->GETFIELD(4))
				AREA_SPRING_CORN	=	FLOAT(ORS->GETFIELD(5))
				AREA_SUMMER_CORN	=	FLOAT(ORS->GETFIELD(6))
				AREA_SOYBEAN		=	FLOAT(ORS->GETFIELD(7))
				;PRINT,'AREA_SUMMER_CORN',AREA_SUMMER_CORN

				PER_W	=	FLOAT(ORS->GETFIELD(8));差
				PER_LW	=	FLOAT(ORS->GETFIELD(9));稍差
				PER_K	=	FLOAT(ORS->GETFIELD(10));持平
				PER_LB	=	FLOAT(ORS->GETFIELD(11));稍好
				PER_B	=	FLOAT(ORS->GETFIELD(12));好

				LAND_TYPE	=STRTRIM(STRING(ORS->GETFIELD(13)),2)

				;PRINT,LAND_TYPE,AVG_VALUE,AREA
				;对原来的算法进行了修改,原来的算法是分8种作物的(CASE语句中)
				;现在只分两种情况(水田和旱地),但仍对8种作物进行计算
				CASE LAND_TYPE OF
					'旱地':BEGIN
						;冬小麦
						ADDUP_AREA_WINTER_WHEAT		=ADDUP_AREA_WINTER_WHEAT+AREA_WINTER_WHEAT
						ADDUP_AREA_WINTER_WHEAT_W	=ADDUP_AREA_WINTER_WHEAT_W+AREA_WINTER_WHEAT*PER_W
						ADDUP_AREA_WINTER_WHEAT_LW	=ADDUP_AREA_WINTER_WHEAT_LW+AREA_WINTER_WHEAT*PER_LW
						ADDUP_AREA_WINTER_WHEAT_K	=ADDUP_AREA_WINTER_WHEAT_K+AREA_WINTER_WHEAT*PER_K
						ADDUP_AREA_WINTER_WHEAT_LB	=ADDUP_AREA_WINTER_WHEAT_LB+AREA_WINTER_WHEAT*PER_LB
						ADDUP_AREA_WINTER_WHEAT_B	=ADDUP_AREA_WINTER_WHEAT_B+AREA_WINTER_WHEAT*PER_B
						;春小麦
						ADDUP_AREA_SPRING_WHEAT		=ADDUP_AREA_SPRING_WHEAT+AREA_SPRING_WHEAT
						ADDUP_AREA_SPRING_WHEAT_W	=ADDUP_AREA_SPRING_WHEAT_W+AREA_SPRING_WHEAT*PER_W
						ADDUP_AREA_SPRING_WHEAT_LW	=ADDUP_AREA_SPRING_WHEAT_LW+AREA_SPRING_WHEAT*PER_LW
						ADDUP_AREA_SPRING_WHEAT_K	=ADDUP_AREA_SPRING_WHEAT_K+AREA_SPRING_WHEAT*PER_K
						ADDUP_AREA_SPRING_WHEAT_LB	=ADDUP_AREA_SPRING_WHEAT_LB+AREA_SPRING_WHEAT*PER_LB
						ADDUP_AREA_SPRING_WHEAT_B	=ADDUP_AREA_SPRING_WHEAT_B+AREA_SPRING_WHEAT*PER_B
						;春玉米
						ADDUP_AREA_SPRING_CORN		=ADDUP_AREA_SPRING_CORN	+AREA_SPRING_CORN
						ADDUP_AREA_SPRING_CORN_W	=ADDUP_AREA_SPRING_CORN_W+AREA_SPRING_CORN*PER_W
						ADDUP_AREA_SPRING_CORN_LW	=ADDUP_AREA_SPRING_CORN_LW+AREA_SPRING_CORN*PER_LW
						ADDUP_AREA_SPRING_CORN_K	=ADDUP_AREA_SPRING_CORN_K+AREA_SPRING_CORN*PER_K
						ADDUP_AREA_SPRING_CORN_LB	=ADDUP_AREA_SPRING_CORN_LB+AREA_SPRING_CORN*PER_LB
						ADDUP_AREA_SPRING_CORN_B	=ADDUP_AREA_SPRING_CORN_B+AREA_SPRING_CORN*PER_B
						;夏玉米
						ADDUP_AREA_SUMMER_CORN		=ADDUP_AREA_SUMMER_CORN	+AREA_SUMMER_CORN
						ADDUP_AREA_SUMMER_CORN_W	=ADDUP_AREA_SUMMER_CORN_W+AREA_SUMMER_CORN*PER_W
						ADDUP_AREA_SUMMER_CORN_LW	=ADDUP_AREA_SUMMER_CORN_LW+AREA_SUMMER_CORN*PER_LW
						ADDUP_AREA_SUMMER_CORN_K	=ADDUP_AREA_SUMMER_CORN_K+AREA_SUMMER_CORN*PER_K
						ADDUP_AREA_SUMMER_CORN_LB	=ADDUP_AREA_SUMMER_CORN_LB+AREA_SUMMER_CORN*PER_LB
						ADDUP_AREA_SUMMER_CORN_B	=ADDUP_AREA_SUMMER_CORN_B+AREA_SUMMER_CORN*PER_B
						;大豆
						ADDUP_AREA_SOYBEAN		=ADDUP_AREA_SOYBEAN		+AREA_SOYBEAN
						ADDUP_AREA_SOYBEAN_W	=ADDUP_AREA_SOYBEAN_W+AREA_SOYBEAN*PER_W
						ADDUP_AREA_SOYBEAN_LW	=ADDUP_AREA_SOYBEAN_LW+AREA_SOYBEAN*PER_LW
						ADDUP_AREA_SOYBEAN_K	=ADDUP_AREA_SOYBEAN_K+AREA_SOYBEAN*PER_K
						ADDUP_AREA_SOYBEAN_LB	=ADDUP_AREA_SOYBEAN_LB+AREA_SOYBEAN*PER_LB
						ADDUP_AREA_SOYBEAN_B	=ADDUP_AREA_SOYBEAN_B+AREA_SOYBEAN*PER_B
					END

					'水田':BEGIN
						;早稻
						ADDUP_AREA_EARLY_RICE		=ADDUP_AREA_EARLY_RICE	+AREA_EARLY_RICE
						ADDUP_AREA_EARLY_RICE_W		=ADDUP_AREA_EARLY_RICE_W+AREA_EARLY_RICE*PER_W
						ADDUP_AREA_EARLY_RICE_LW	=ADDUP_AREA_EARLY_RICE_LW+AREA_EARLY_RICE*PER_LW
						ADDUP_AREA_EARLY_RICE_K		=ADDUP_AREA_EARLY_RICE_K+AREA_EARLY_RICE*PER_K
						ADDUP_AREA_EARLY_RICE_LB	=ADDUP_AREA_EARLY_RICE_LB+AREA_EARLY_RICE*PER_LB
						ADDUP_AREA_EARLY_RICE_B		=ADDUP_AREA_EARLY_RICE_B+AREA_EARLY_RICE*PER_B
						;中稻
						ADDUP_AREA_SEMILATE_RICE	=ADDUP_AREA_SEMILATE_RICE+AREA_SEMILATE_RICE
						ADDUP_AREA_SEMILATE_RICE_W	=ADDUP_AREA_SEMILATE_RICE_W+AREA_SEMILATE_RICE*PER_W
						ADDUP_AREA_SEMILATE_RICE_LW	=ADDUP_AREA_SEMILATE_RICE_LW+AREA_SEMILATE_RICE*PER_LW
						ADDUP_AREA_SEMILATE_RICE_K	=ADDUP_AREA_SEMILATE_RICE_K+AREA_SEMILATE_RICE*PER_K
						ADDUP_AREA_SEMILATE_RICE_LB	=ADDUP_AREA_SEMILATE_RICE_LB+AREA_SEMILATE_RICE*PER_LB
						ADDUP_AREA_SEMILATE_RICE_B	=ADDUP_AREA_SEMILATE_RICE_B+AREA_SEMILATE_RICE*PER_B
				  		;晚稻
						ADDUP_AREA_LATE_RICE		=ADDUP_AREA_LATE_RICE	+AREA_LATE_RICE
						ADDUP_AREA_LATE_RICE_W		=ADDUP_AREA_LATE_RICE_W+AREA_LATE_RICE*PER_W
						ADDUP_AREA_LATE_RICE_LW		=ADDUP_AREA_LATE_RICE_LW+AREA_LATE_RICE*PER_LW
						ADDUP_AREA_LATE_RICE_K		=ADDUP_AREA_LATE_RICE_K+AREA_LATE_RICE*PER_K
						ADDUP_AREA_LATE_RICE_LB		=ADDUP_AREA_LATE_RICE_LB+AREA_LATE_RICE*PER_LB
						ADDUP_AREA_LATE_RICE_B		=ADDUP_AREA_LATE_RICE_B+AREA_LATE_RICE*PER_B
					END

					ELSE:
				ENDCASE
			;ENDWHILE
			ENDREP UNTIL (ORS->MOVECURSOR(/NEXT) NE 1)
		ENDIF

   		;PRINT,'AA'
   	ENDIF ELSE BEGIN;处理省以外的其他级别的(自定义监测区)
	 	;分两步先做耕地\水田\旱地的,再做分作物类型的.
   		;*******************************************************************************
	 	;(1)先处理耕地\水田\和旱地的,(在两行星中间)
		SQL='SELECT '
		SQL=SQL+'PLOWLAND_AREA_COUNTY.PLOWLAND,'
		SQL=SQL+'PLOWLAND_AREA_COUNTY.PADDY_FIELD,'
		SQL=SQL+'PLOWLAND_AREA_COUNTY.DRY_LAND,'


		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_WORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEWORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_KEEPBALANCE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEBETTER,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_BETTER,'
		SQL=SQL+'PARAMETER_RT_COUNTY.LAND_TYPE '

	 	SQL=SQL+'FROM PLOWLAND_AREA_COUNTY,'
	 	SQL=SQL+'PARAMETER_RT_COUNTY '

	 	SQL=SQL+' WHERE (PARAMETER_RT_COUNTY.COUNTY_CODE IN '
	 	SQL=SQL+'(SELECT COUNTY_CODE FROM COUNTY_TO_ROI WHERE ROI_CODE='+"'"+RANGE_CODE+"'"+')) AND '

	 	SQL=SQL+'(PARAMETER_RT_COUNTY.COUNTY_CODE=PLOWLAND_AREA_COUNTY.COUNTY_CODE) '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.YEAR='+STRTRIM(YEAR,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.MONTH='+STRTRIM(MONTH,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DAY='+STRTRIM(DAY,2)+')'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.SENSOR_CODE='+"'"+SENSOR_CODE+"'"+')'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DATA_TYPE='+"'"+DATA_TYPE+"'"+')'

	 	PRINT,SQL
	 	PRINT,'STOP 187'


	 	ORS = OBJ_NEW('IDLDBRECORDSET', OD, SQL=SQL)
		NUM_OF_COUNTY=1
		IF(ORS->MOVECURSOR(/FIRST) EQ 1)THEN BEGIN

			REPEAT BEGIN
				NUM_OF_COUNTY		=	NUM_OF_COUNTY+1
				AREA_PLOWLAND		=	FLOAT(ORS->GETFIELD(0));把面积作为权重
				AREA_PADDY_FIELD	=	FLOAT(ORS->GETFIELD(1))
				AREA_DRY_LAND		=	FLOAT(ORS->GETFIELD(2))

				PER_W	=	FLOAT(ORS->GETFIELD(3));差
				PER_LW	=	FLOAT(ORS->GETFIELD(4));稍差
				PER_K	=	FLOAT(ORS->GETFIELD(5));持平
				PER_LB	=	FLOAT(ORS->GETFIELD(6));稍好
				PER_B	=	FLOAT(ORS->GETFIELD(7));好


				LAND_TYPE	=STRTRIM(STRING(ORS->GETFIELD(8)),2)
				;PRINT,'LAND_TYPE',LAND_TYPE
				;PRINT,LAND_TYPE,AVG_VALUE,AREA
				;!!!!!!!!为了与后面的程序保持一致,在这里用WEIGHT来表示AREA,但是只局限于耕地\水田\旱地,
				;!!!!!!!!在计算分作物类型时,仍然使用AREA作为权重
				CASE LAND_TYPE OF
					'耕地':BEGIN
						ADDUP_WEIGHT_PLOWLAND=ADDUP_WEIGHT_PLOWLAND+AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_W	=ADDUP_WEIGHT_PLOWLAND_W+PER_W*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_LW=ADDUP_WEIGHT_PLOWLAND_LW+PER_LW*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_K=ADDUP_WEIGHT_PLOWLAND_K+PER_K*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_LB=ADDUP_WEIGHT_PLOWLAND_LB+PER_LB*AREA_PLOWLAND
						ADDUP_WEIGHT_PLOWLAND_B=ADDUP_WEIGHT_PLOWLAND_B+PER_B*AREA_PLOWLAND

					END
					'水田':BEGIN
						ADDUP_WEIGHT_PADDY_FIELD=ADDUP_WEIGHT_PADDY_FIELD+AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_W	=ADDUP_WEIGHT_PADDY_FIELD_W+PER_W*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_LW=ADDUP_WEIGHT_PADDY_FIELD_LW+PER_LW*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_K=ADDUP_WEIGHT_PADDY_FIELD_K+PER_K*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_LB=ADDUP_WEIGHT_PADDY_FIELD_LB+PER_LB*AREA_PADDY_FIELD
						ADDUP_WEIGHT_PADDY_FIELD_B=ADDUP_WEIGHT_PADDY_FIELD_B+PER_B*AREA_PADDY_FIELD
					END
					'旱地':BEGIN
						ADDUP_WEIGHT_DRY_LAND=ADDUP_WEIGHT_DRY_LAND+AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_W	=ADDUP_WEIGHT_DRY_LAND_W+PER_W*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_LW=ADDUP_WEIGHT_DRY_LAND_LW+PER_LW*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_K=ADDUP_WEIGHT_DRY_LAND_K+PER_K*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_LB=ADDUP_WEIGHT_DRY_LAND_LB+PER_LB*AREA_DRY_LAND
						ADDUP_WEIGHT_DRY_LAND_B=ADDUP_WEIGHT_DRY_LAND_B+PER_B*AREA_DRY_LAND

					END
					ELSE:

				ENDCASE

			ENDREP UNTIL (ORS->MOVECURSOR(/NEXT) NE 1)
			;WHILE (ORS->MOVECURSOR(/NEXT) EQ 1) DO BEGIN
			;ENDWHILE
		ENDIF
		OBJ_DESTROY,ORS

		;(2)再处理分作物的数值(也是在两行星之间)
		SQL='SELECT '
		SQL=SQL+'CROP_AREA_COUNTY.WINTER_WHEAT,'
		SQL=SQL+'CROP_AREA_COUNTY.SPRING_WHEAT,'
		SQL=SQL+'CROP_AREA_COUNTY.EARLY_RICE,'
		SQL=SQL+'CROP_AREA_COUNTY.SEMILATE_RICE,'
		SQL=SQL+'CROP_AREA_COUNTY.LATE_RICE,'
		SQL=SQL+'CROP_AREA_COUNTY.SPRING_CORN,'
		SQL=SQL+'CROP_AREA_COUNTY.SUMMER_CORN,'
		SQL=SQL+'CROP_AREA_COUNTY.SOYBEAN,'

		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_WORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEWORSE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_KEEPBALANCE,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_LITTLEBETTER,'
		SQL=SQL+'PARAMETER_RT_COUNTY.PERCENT_BETTER,'

		SQL=SQL+'PARAMETER_RT_COUNTY.LAND_TYPE '

	 	SQL=SQL+'FROM CROP_AREA_COUNTY,'
	 	SQL=SQL+'PARAMETER_RT_COUNTY'

	 	SQL=SQL+' WHERE (PARAMETER_RT_COUNTY.COUNTY_CODE IN '
	 	SQL=SQL+'(SELECT COUNTY_CODE FROM COUNTY_TO_ROI  WHERE ROI_CODE='+"'"+RANGE_CODE+"'"+')) AND '

	 	SQL=SQL+'(PARAMETER_RT_COUNTY.COUNTY_CODE=CROP_AREA_COUNTY.COUNTY_CODE) '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.YEAR='+STRTRIM(YEAR,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.MONTH='+STRTRIM(MONTH,2)+') '
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DAY='+STRTRIM(DAY,2)+')'
	 	SQL=SQL+'AND (CROP_AREA_COUNTY.YEAR=2004)'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.SENSOR_CODE='+"'"+SENSOR_CODE+"'"+')'
	 	SQL=SQL+'AND (PARAMETER_RT_COUNTY.DATA_TYPE='+"'"+DATA_TYPE+"'"+')'
	 	;上面一句中说明代码中固化了使用2004年的面积数据
	 	PRINT,SQL


	 	ORS = OBJ_NEW('IDLDBRECORDSET', OD, SQL=SQL)
		NUM_OF_COUNTY=1
		IF(ORS->MOVECURSOR(/FIRST) EQ 1)THEN BEGIN

			;WHILE (ORS->MOVECURSOR(/NEXT) EQ 1) DO BEGIN
			REPEAT BEGIN
				NUM_OF_COUNTY		=	NUM_OF_COUNTY+1
				AREA_WINTER_WHEAT	=	FLOAT(ORS->GETFIELD(0))
				AREA_SPRING_WHEAT	=	FLOAT(ORS->GETFIELD(1))
				AREA_EARLY_RICE		=	FLOAT(ORS->GETFIELD(2))
				AREA_SEMILATE_RICE	=	FLOAT(ORS->GETFIELD(3))
				AREA_LATE_RICE		=	FLOAT(ORS->GETFIELD(4))
				AREA_SPRING_CORN	=	FLOAT(ORS->GETFIELD(5))
				AREA_SUMMER_CORN	=	FLOAT(ORS->GETFIELD(6))
				AREA_SOYBEAN		=	FLOAT(ORS->GETFIELD(7))
				;PRINT,'AREA_SUMMER_CORN',AREA_SUMMER_CORN

				PER_W	=	FLOAT(ORS->GETFIELD(8));差
				PER_LW	=	FLOAT(ORS->GETFIELD(9));稍差
				PER_K	=	FLOAT(ORS->GETFIELD(10));持平
				PER_LB	=	FLOAT(ORS->GETFIELD(11));稍好
				PER_B	=	FLOAT(ORS->GETFIELD(12));好

				LAND_TYPE	=STRTRIM(STRING(ORS->GETFIELD(13)),2)

				;PRINT,LAND_TYPE,AVG_VALUE,AREA
				;对原来的算法进行了修改,原来的算法是分8种作物的(CASE语句中)
				;现在只分两种情况(水田和旱地),但仍对8种作物进行计算
				CASE LAND_TYPE OF
					'旱地':BEGIN
						;冬小麦
						ADDUP_AREA_WINTER_WHEAT		=ADDUP_AREA_WINTER_WHEAT+AREA_WINTER_WHEAT
						ADDUP_AREA_WINTER_WHEAT_W	=ADDUP_AREA_WINTER_WHEAT_W+AREA_WINTER_WHEAT*PER_W
						ADDUP_AREA_WINTER_WHEAT_LW	=ADDUP_AREA_WINTER_WHEAT_LW+AREA_WINTER_WHEAT*PER_LW
						ADDUP_AREA_WINTER_WHEAT_K	=ADDUP_AREA_WINTER_WHEAT_K+AREA_WINTER_WHEAT*PER_K
						ADDUP_AREA_WINTER_WHEAT_LB	=ADDUP_AREA_WINTER_WHEAT_LB+AREA_WINTER_WHEAT*PER_LB
						ADDUP_AREA_WINTER_WHEAT_B	=ADDUP_AREA_WINTER_WHEAT_B+AREA_WINTER_WHEAT*PER_B
						;春小麦
						ADDUP_AREA_SPRING_WHEAT		=ADDUP_AREA_SPRING_WHEAT+AREA_SPRING_WHEAT
						ADDUP_AREA_SPRING_WHEAT_W	=ADDUP_AREA_SPRING_WHEAT_W+AREA_SPRING_WHEAT*PER_W
						ADDUP_AREA_SPRING_WHEAT_LW	=ADDUP_AREA_SPRING_WHEAT_LW+AREA_SPRING_WHEAT*PER_LW
						ADDUP_AREA_SPRING_WHEAT_K	=ADDUP_AREA_SPRING_WHEAT_K+AREA_SPRING_WHEAT*PER_K
						ADDUP_AREA_SPRING_WHEAT_LB	=ADDUP_AREA_SPRING_WHEAT_LB+AREA_SPRING_WHEAT*PER_LB
						ADDUP_AREA_SPRING_WHEAT_B	=ADDUP_AREA_SPRING_WHEAT_B+AREA_SPRING_WHEAT*PER_B
						;春玉米
						ADDUP_AREA_SPRING_CORN		=ADDUP_AREA_SPRING_CORN	+AREA_SPRING_CORN
						ADDUP_AREA_SPRING_CORN_W	=ADDUP_AREA_SPRING_CORN_W+AREA_SPRING_CORN*PER_W
						ADDUP_AREA_SPRING_CORN_LW	=ADDUP_AREA_SPRING_CORN_LW+AREA_SPRING_CORN*PER_LW
						ADDUP_AREA_SPRING_CORN_K	=ADDUP_AREA_SPRING_CORN_K+AREA_SPRING_CORN*PER_K
						ADDUP_AREA_SPRING_CORN_LB	=ADDUP_AREA_SPRING_CORN_LB+AREA_SPRING_CORN*PER_LB
						ADDUP_AREA_SPRING_CORN_B	=ADDUP_AREA_SPRING_CORN_B+AREA_SPRING_CORN*PER_B
						;夏玉米
						ADDUP_AREA_SUMMER_CORN		=ADDUP_AREA_SUMMER_CORN	+AREA_SUMMER_CORN
						ADDUP_AREA_SUMMER_CORN_W	=ADDUP_AREA_SUMMER_CORN_W+AREA_SUMMER_CORN*PER_W
						ADDUP_AREA_SUMMER_CORN_LW	=ADDUP_AREA_SUMMER_CORN_LW+AREA_SUMMER_CORN*PER_LW
						ADDUP_AREA_SUMMER_CORN_K	=ADDUP_AREA_SUMMER_CORN_K+AREA_SUMMER_CORN*PER_K
						ADDUP_AREA_SUMMER_CORN_LB	=ADDUP_AREA_SUMMER_CORN_LB+AREA_SUMMER_CORN*PER_LB
						ADDUP_AREA_SUMMER_CORN_B	=ADDUP_AREA_SUMMER_CORN_B+AREA_SUMMER_CORN*PER_B
						;大豆
						ADDUP_AREA_SOYBEAN		=ADDUP_AREA_SOYBEAN		+AREA_SOYBEAN
						ADDUP_AREA_SOYBEAN_W	=ADDUP_AREA_SOYBEAN_W+AREA_SOYBEAN*PER_W
						ADDUP_AREA_SOYBEAN_LW	=ADDUP_AREA_SOYBEAN_LW+AREA_SOYBEAN*PER_LW
						ADDUP_AREA_SOYBEAN_K	=ADDUP_AREA_SOYBEAN_K+AREA_SOYBEAN*PER_K
						ADDUP_AREA_SOYBEAN_LB	=ADDUP_AREA_SOYBEAN_LB+AREA_SOYBEAN*PER_LB
						ADDUP_AREA_SOYBEAN_B	=ADDUP_AREA_SOYBEAN_B+AREA_SOYBEAN*PER_B
					END

					'水田':BEGIN
						;早稻
						ADDUP_AREA_EARLY_RICE		=ADDUP_AREA_EARLY_RICE	+AREA_EARLY_RICE
						ADDUP_AREA_EARLY_RICE_W		=ADDUP_AREA_EARLY_RICE_W+AREA_EARLY_RICE*PER_W
						ADDUP_AREA_EARLY_RICE_LW	=ADDUP_AREA_EARLY_RICE_LW+AREA_EARLY_RICE*PER_LW
						ADDUP_AREA_EARLY_RICE_K		=ADDUP_AREA_EARLY_RICE_K+AREA_EARLY_RICE*PER_K
						ADDUP_AREA_EARLY_RICE_LB	=ADDUP_AREA_EARLY_RICE_LB+AREA_EARLY_RICE*PER_LB
						ADDUP_AREA_EARLY_RICE_B		=ADDUP_AREA_EARLY_RICE_B+AREA_EARLY_RICE*PER_B
						;中稻
						ADDUP_AREA_SEMILATE_RICE	=ADDUP_AREA_SEMILATE_RICE+AREA_SEMILATE_RICE
						ADDUP_AREA_SEMILATE_RICE_W	=ADDUP_AREA_SEMILATE_RICE_W+AREA_SEMILATE_RICE*PER_W
						ADDUP_AREA_SEMILATE_RICE_LW	=ADDUP_AREA_SEMILATE_RICE_LW+AREA_SEMILATE_RICE*PER_LW
						ADDUP_AREA_SEMILATE_RICE_K	=ADDUP_AREA_SEMILATE_RICE_K+AREA_SEMILATE_RICE*PER_K
						ADDUP_AREA_SEMILATE_RICE_LB	=ADDUP_AREA_SEMILATE_RICE_LB+AREA_SEMILATE_RICE*PER_LB
						ADDUP_AREA_SEMILATE_RICE_B	=ADDUP_AREA_SEMILATE_RICE_B+AREA_SEMILATE_RICE*PER_B
				  		;晚稻
						ADDUP_AREA_LATE_RICE		=ADDUP_AREA_LATE_RICE	+AREA_LATE_RICE
						ADDUP_AREA_LATE_RICE_W		=ADDUP_AREA_LATE_RICE_W+AREA_LATE_RICE*PER_W
						ADDUP_AREA_LATE_RICE_LW		=ADDUP_AREA_LATE_RICE_LW+AREA_LATE_RICE*PER_LW
						ADDUP_AREA_LATE_RICE_K		=ADDUP_AREA_LATE_RICE_K+AREA_LATE_RICE*PER_K
						ADDUP_AREA_LATE_RICE_LB		=ADDUP_AREA_LATE_RICE_LB+AREA_LATE_RICE*PER_LB
						ADDUP_AREA_LATE_RICE_B		=ADDUP_AREA_LATE_RICE_B+AREA_LATE_RICE*PER_B
					END

					ELSE:
				ENDCASE
			;ENDWHILE
			ENDREP UNTIL (ORS->MOVECURSOR(/NEXT) NE 1)
		ENDIF
	ENDELSE
	;*******************************************************************************
	;*******************************************************************************

	;定义一个结构体来存放查询的结果
	RESULT={$
		RANGE_NAME	:	RANGE_NAME	,$
		RANGE_CODE	:	RANGE_CODE	,$
		LAND_TYPE	:	''			,$
		PER_W		:	0.0			,$;差
		PER_LW		:	0.0			,$;稍差
		PER_K		:	0.0			,$;持平
		PER_LB		:	0.0			,$;稍好
		PER_B		:	0.0			 $;好

		}
	ARR_RESULT=REPLICATE(RESULT,11)
	FOR I=0,10 DO BEGIN
		ARR_RESULT[I].RANGE_NAME=RANGE_NAME
		ARR_RESULT[I].RANGE_CODE=RANGE_CODE
	ENDFOR

	;对结构体的变量进行符值
	ARR_RESULT[0].LAND_TYPE	='耕地'
	IF(ADDUP_WEIGHT_PLOWLAND NE 0) THEN BEGIN
		ARR_RESULT[0].PER_W		=ADDUP_WEIGHT_PLOWLAND_W/ADDUP_WEIGHT_PLOWLAND
		ARR_RESULT[0].PER_LW	=ADDUP_WEIGHT_PLOWLAND_LW/ADDUP_WEIGHT_PLOWLAND
		ARR_RESULT[0].PER_K		=ADDUP_WEIGHT_PLOWLAND_K/ADDUP_WEIGHT_PLOWLAND
		ARR_RESULT[0].PER_LB	=ADDUP_WEIGHT_PLOWLAND_LB/ADDUP_WEIGHT_PLOWLAND
		ARR_RESULT[0].PER_B		=ADDUP_WEIGHT_PLOWLAND_B/ADDUP_WEIGHT_PLOWLAND
	ENDIF

	ARR_RESULT[1].LAND_TYPE	='水田'
	IF(ADDUP_WEIGHT_PADDY_FIELD NE 0) THEN BEGIN
		ARR_RESULT[1].PER_W		=ADDUP_WEIGHT_PADDY_FIELD_W/ADDUP_WEIGHT_PADDY_FIELD
		ARR_RESULT[1].PER_LW	=ADDUP_WEIGHT_PADDY_FIELD_LW/ADDUP_WEIGHT_PADDY_FIELD
		ARR_RESULT[1].PER_K		=ADDUP_WEIGHT_PADDY_FIELD_K/ADDUP_WEIGHT_PADDY_FIELD
		ARR_RESULT[1].PER_LB	=ADDUP_WEIGHT_PADDY_FIELD_LB/ADDUP_WEIGHT_PADDY_FIELD
		ARR_RESULT[1].PER_B		=ADDUP_WEIGHT_PADDY_FIELD_B/ADDUP_WEIGHT_PADDY_FIELD
	ENDIF

	ARR_RESULT[2].LAND_TYPE	='旱地'
	IF(ADDUP_WEIGHT_DRY_LAND NE 0) THEN BEGIN
		ARR_RESULT[2].PER_W		=ADDUP_WEIGHT_DRY_LAND_W/ADDUP_WEIGHT_DRY_LAND
		ARR_RESULT[2].PER_LW	=ADDUP_WEIGHT_DRY_LAND_LW/ADDUP_WEIGHT_DRY_LAND
		ARR_RESULT[2].PER_K		=ADDUP_WEIGHT_DRY_LAND_K/ADDUP_WEIGHT_DRY_LAND
		ARR_RESULT[2].PER_LB	=ADDUP_WEIGHT_DRY_LAND_LB/ADDUP_WEIGHT_DRY_LAND
		ARR_RESULT[2].PER_B		=ADDUP_WEIGHT_DRY_LAND_B/ADDUP_WEIGHT_DRY_LAND
	ENDIF

	ARR_RESULT[3].LAND_TYPE	='冬小麦'
	IF(ADDUP_AREA_WINTER_WHEAT NE 0) THEN BEGIN
		ARR_RESULT[3].PER_W		=ADDUP_AREA_WINTER_WHEAT_W/ADDUP_AREA_WINTER_WHEAT
		ARR_RESULT[3].PER_LW	=ADDUP_AREA_WINTER_WHEAT_LW/ADDUP_AREA_WINTER_WHEAT
		ARR_RESULT[3].PER_K		=ADDUP_AREA_WINTER_WHEAT_K/ADDUP_AREA_WINTER_WHEAT
		ARR_RESULT[3].PER_LB	=ADDUP_AREA_WINTER_WHEAT_LB/ADDUP_AREA_WINTER_WHEAT
		ARR_RESULT[3].PER_B		=ADDUP_AREA_WINTER_WHEAT_B/ADDUP_AREA_WINTER_WHEAT
	ENDIF

	ARR_RESULT[4].LAND_TYPE	='春小麦'
	IF(ADDUP_AREA_SPRING_WHEAT NE 0) THEN BEGIN
		ARR_RESULT[4].PER_W		=ADDUP_AREA_SPRING_WHEAT_W/ADDUP_AREA_SPRING_WHEAT
		ARR_RESULT[4].PER_LW	=ADDUP_AREA_SPRING_WHEAT_LW/ADDUP_AREA_SPRING_WHEAT
		ARR_RESULT[4].PER_K		=ADDUP_AREA_SPRING_WHEAT_K/ADDUP_AREA_SPRING_WHEAT
		ARR_RESULT[4].PER_LB	=ADDUP_AREA_SPRING_WHEAT_LB/ADDUP_AREA_SPRING_WHEAT
		ARR_RESULT[4].PER_B		=ADDUP_AREA_SPRING_WHEAT_B/ADDUP_AREA_SPRING_WHEAT
	ENDIF

	ARR_RESULT[5].LAND_TYPE	='早稻'
	IF(ADDUP_AREA_EARLY_RICE NE 0) THEN BEGIN
		ARR_RESULT[5].PER_W		=ADDUP_AREA_EARLY_RICE_W/ADDUP_AREA_EARLY_RICE
		ARR_RESULT[5].PER_LW	=ADDUP_AREA_EARLY_RICE_LW/ADDUP_AREA_EARLY_RICE
		ARR_RESULT[5].PER_K		=ADDUP_AREA_EARLY_RICE_K/ADDUP_AREA_EARLY_RICE
		ARR_RESULT[5].PER_LB	=ADDUP_AREA_EARLY_RICE_LB/ADDUP_AREA_EARLY_RICE
		ARR_RESULT[5].PER_B		=ADDUP_AREA_EARLY_RICE_B/ADDUP_AREA_EARLY_RICE
	ENDIF

	ARR_RESULT[6].LAND_TYPE	='中稻'
	IF(ADDUP_AREA_SEMILATE_RICE NE 0) THEN BEGIN
		ARR_RESULT[6].PER_W		=ADDUP_AREA_SEMILATE_RICE_W/ADDUP_AREA_SEMILATE_RICE
		ARR_RESULT[6].PER_LW	=ADDUP_AREA_SEMILATE_RICE_LW/ADDUP_AREA_SEMILATE_RICE
		ARR_RESULT[6].PER_K		=ADDUP_AREA_SEMILATE_RICE_K/ADDUP_AREA_SEMILATE_RICE
		ARR_RESULT[6].PER_LB	=ADDUP_AREA_SEMILATE_RICE_LB/ADDUP_AREA_SEMILATE_RICE
		ARR_RESULT[6].PER_B		=ADDUP_AREA_SEMILATE_RICE_B/ADDUP_AREA_SEMILATE_RICE
	ENDIF

	ARR_RESULT[7].LAND_TYPE	='晚稻'
	IF(ADDUP_AREA_LATE_RICE NE 0) THEN BEGIN
		ARR_RESULT[7].PER_W		=ADDUP_AREA_LATE_RICE_W/ADDUP_AREA_LATE_RICE
		ARR_RESULT[7].PER_LW	=ADDUP_AREA_LATE_RICE_LW/ADDUP_AREA_LATE_RICE
		ARR_RESULT[7].PER_K		=ADDUP_AREA_LATE_RICE_K/ADDUP_AREA_LATE_RICE
		ARR_RESULT[7].PER_LB	=ADDUP_AREA_LATE_RICE_LB/ADDUP_AREA_LATE_RICE
		ARR_RESULT[7].PER_B		=ADDUP_AREA_LATE_RICE_B/ADDUP_AREA_LATE_RICE
	ENDIF

	ARR_RESULT[8].LAND_TYPE	='春玉米'
	IF(ADDUP_AREA_SPRING_CORN NE 0) THEN BEGIN
		ARR_RESULT[8].PER_W		=ADDUP_AREA_SPRING_CORN_W/ADDUP_AREA_SPRING_CORN
		ARR_RESULT[8].PER_LW	=ADDUP_AREA_SPRING_CORN_LW/ADDUP_AREA_SPRING_CORN
		ARR_RESULT[8].PER_K		=ADDUP_AREA_SPRING_CORN_K/ADDUP_AREA_SPRING_CORN
		ARR_RESULT[8].PER_LB	=ADDUP_AREA_SPRING_CORN_LB/ADDUP_AREA_SPRING_CORN
		ARR_RESULT[8].PER_B		=ADDUP_AREA_SPRING_CORN_B/ADDUP_AREA_SPRING_CORN
	ENDIF

	ARR_RESULT[9].LAND_TYPE	='夏玉米'
	IF(ADDUP_AREA_SUMMER_CORN NE 0) THEN BEGIN
		ARR_RESULT[9].PER_W		=ADDUP_AREA_SUMMER_CORN_W/ADDUP_AREA_SUMMER_CORN
		ARR_RESULT[9].PER_LW	=ADDUP_AREA_SUMMER_CORN_LW/ADDUP_AREA_SUMMER_CORN
		ARR_RESULT[9].PER_K		=ADDUP_AREA_SUMMER_CORN_K/ADDUP_AREA_SUMMER_CORN
		ARR_RESULT[9].PER_LB	=ADDUP_AREA_SUMMER_CORN_LB/ADDUP_AREA_SUMMER_CORN
		ARR_RESULT[9].PER_B		=ADDUP_AREA_SUMMER_CORN_B/ADDUP_AREA_SUMMER_CORN
	ENDIF

	ARR_RESULT[10].LAND_TYPE='大豆'
	IF(ADDUP_AREA_SOYBEAN NE 0) THEN BEGIN
		ARR_RESULT[10].PER_W	=ADDUP_AREA_SOYBEAN_W/ADDUP_AREA_SOYBEAN
		ARR_RESULT[10].PER_LW	=ADDUP_AREA_SOYBEAN_LW/ADDUP_AREA_SOYBEAN
		ARR_RESULT[10].PER_K	=ADDUP_AREA_SOYBEAN_K/ADDUP_AREA_SOYBEAN
		ARR_RESULT[10].PER_LB	=ADDUP_AREA_SOYBEAN_LB/ADDUP_AREA_SOYBEAN
		ARR_RESULT[10].PER_B	=ADDUP_AREA_SOYBEAN_B/ADDUP_AREA_SOYBEAN
	ENDIF

	OBJ_DESTROY, ORS
	;HELP,RESULT,/STRUCTURE


	PRINT,'ADDUP_AREA_WINTER_WHEAT',ADDUP_AREA_WINTER_WHEAT
	PRINT,'ADDUP_AREA_SPRING_WHEAT',ADDUP_AREA_SPRING_WHEAT

	PRINT,'ADDUP_AREA_EARLY_RICE',ADDUP_AREA_EARLY_RICE
	PRINT,'ADDUP_AREA_SEMILATE_RICE',ADDUP_AREA_SEMILATE_RICE
	PRINT,'ADDUP_AREA_LATE_RICE',ADDUP_AREA_LATE_RICE

	PRINT,'ADDUP_AREA_SPRING_CORN',ADDUP_AREA_SPRING_CORN
	PRINT,'ADDUP_AREA_SUMMER_CORN',ADDUP_AREA_SUMMER_CORN
	PRINT,'ADDUP_AREA_SOYBEAN',ADDUP_AREA_SOYBEAN

	;*******************************************************************************
	PRINT,'LINE 795'
	;*******************************************************************************
	RETURN,ARR_RESULT

END




;-----------------------------------------------------------------

FUNCTION CMD_ZS_COUNT_STA_RT_ABOVE_COUNTY, EVENT

    ;**************************************************************
    ;这是模块的主程序,完成了汇总的工作
    ;**************************************************************
	COMMON COMMON_BLOCK,yesORno,DBobj,FILE_PATH,Year_1,DSN,USER_NAME,PWD,PROVINCE_CODE

    WIDGET_CONTROL,EVENT.TOP,GET_UVALUE = PSTATE
    SCALE=(*PSTATE).SCALE

    ;如果没有选择范围就退出系统
    IF(SCALE EQ '请选择尺度') THEN BEGIN
    	 MSG=DIALOG_MESSAGE('请先选择尺度!',TITLE='提示',/INFORMATION)
         CLOSE,/ALL
         log, '实时监测-汇总', -1
         RETURN,0
    ENDIF


    ;首先获得要查询使用的参数
    YEAR	=(*PSTATE).YEAR
    MONTH	=(*PSTATE).MONTH
    DAY		=(*PSTATE).DAY

    RANGE	=(*PSTATE).RANGE
    RANGE_NAME	=(*PSTATE).RANGE
    NUM_OF_RANGE	=	(*PSTATE).NUM_OF_RANGE
    RANGE_CODE	=(*PSTATE).RANGE_CODE
    PERIOD		=(*PSTATE).PERIOD
    SENSOR_CODE	=(*PSTATE).SENSOR_CODE

    DBCO=DBobj

    DATA_TYPE   =STRTRIM((*PSTATE).DATA_TYPE,2)
    PRINT,'AAA'
    PRINT,SCALE
    PRINT,RANGE
    ;RETURN,0
	IF((RANGE EQ (*PSTATE).ARR_RANGE[0]) AND (SCALE NE '全省')) THEN BEGIN ;同时对所有的省进行汇总

		(*PSTATE).ALL_RANGE=1	;同时对所有的自定义进行汇总
		RESULT=STRARR(10,(NUM_OF_RANGE-1)*11)
		;通过FOR循环对所有的省进行查询
		;***************************************************************
		progressTimer = Obj_New("ShowProgress", tlb,/CancelButton)
		progressTimer->start
		;***************************************************************
		FOR H=0,NUM_OF_RANGE-2 DO BEGIN
			;***************************************************************
			CANCELLED = PROGRESSTIMER->CHECKCANCEL()
			IF CANCELLED THEN BEGIN
				OK = DIALOG_MESSAGE('用户终止了操作',TITLE='提示')
				PROGRESSTIMER->DESTROY ;结束进度条
				log, '实时监测-汇总', 0
				RETURN,0
			ENDIF
			PROGRESSTIMER->UPDATE, (FLOAT(H)/(NUM_OF_RANGE-1) * 100.0) ;继续进行
			;***************************************************************
			;RESULT_TEMP=COUNT_STA_RT_ABOVE_COUNTY((*PSTATE).ARR_RANGE[H+1],(*PSTATE).ARR_RANGE_CODE[H+1],YEAR,MONTH,XUN,DATA_TYPE,(*PSTATE).DBCO,SCALE)
			RANGE_NAME	=(*PSTATE).ARR_RANGE[H+1]
			RANGE_CODE	=(*PSTATE).ARR_RANGE_CODE[H+1]
			RESULT_TEMP=ZS_COUNT_STA_RT_ABOVE_COUNTY(RANGE_NAME,RANGE_CODE,YEAR,MONTH,DAY,DATA_TYPE,SCALE,$
                           SENSOR_CODE,PERIOD)
			FOR J=0,10 DO BEGIN
				FOR K=0,7 DO BEGIN
					RESULT[K,H*11+J]=RESULT_TEMP[J].(K)
				ENDFOR
				RESULT[8,H*11+J]=SENSOR_CODE
				RESULT[9,H*11+J]=PERIOD
			ENDFOR
		ENDFOR
		;***************************************************************
		progressTimer->destroy ;
		;***************************************************************
	ENDIF ELSE BEGIN	;只对一个区域进行汇总
		(*PSTATE).ALL_RANGE=0	;只对一个省进行汇总
		RESULT=STRARR(10,11)
		RESULT_TEMP	=ZS_COUNT_STA_RT_ABOVE_COUNTY(RANGE_NAME,RANGE_CODE,YEAR,MONTH,DAY,DATA_TYPE,SCALE,$
                           SENSOR_CODE,PERIOD)
		FOR J=0,10 DO BEGIN
			FOR K=0,7 DO BEGIN
				RESULT[K,J]=RESULT_TEMP[J].(K)
			ENDFOR
			RESULT[8,J]=SENSOR_CODE
			RESULT[9,J]=PERIOD
		ENDFOR

	ENDELSE


	;把值写入到表格中
	RESULT=STRTRIM(RESULT,2)
	IF((*PSTATE).ALL_RANGE EQ 1) THEN BEGIN
		WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,TABLE_YSIZE=(NUM_OF_RANGE-1)*11
	ENDIF ELSE BEGIN
		WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,TABLE_YSIZE=11
	ENDELSE
	WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,SET_VALUE=RESULT

	;改变变量值,表征汇总已经完成
	(*PSTATE).COUNT_DONE=1
	log, '实时监测-汇总', 0
    RETURN, EVENT ; BY DEFAULT, RETURN THE EVENT.

END
;-----------------------------------------------------------------


;-----------------------------------------------------------------
FUNCTION CMD_WRITE_STA_RT_ABOVE_COUNTY, EVENT

    WIDGET_CONTROL,EVENT.TOP,GET_UVALUE = PSTATE

    ;完成把汇总的结果进行入库处理的功能
    ;modified 20070607
    COMMON COMMON_BLOCK,yesORno,DBobj,FILE_PATH,Year_1,DSN,USER_NAME,PWD,PROVINCE_CODE
    ;PROVINCE_CODE='230000'
    ;1)首先对是否已经进行过汇总进行验证,只有在汇总过后才运行程序
    IF((*PSTATE).COUNT_DONE EQ 0) THEN BEGIN
        MSG=DIALOG_MESSAGE('请先进行汇总!',TITLE='提示',/INFORMATION)
        CLOSE,/ALL
        RETURN,0
    ENDIF

    WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,GET_VALUE=ARR_RESULT

    ;2)获取相应的参数
    YEAR   =STRTRIM(STRING((*PSTATE).YEAR)   ,2)
    MONTH   =STRTRIM(STRING((*PSTATE).MONTH),2)
    DAY     =STRTRIM(STRING((*PSTATE).DAY) ,2)
    RANGE   =(*PSTATE).RANGE
    RANGE_CODE  =STRTRIM((*PSTATE).RANGE_CODE,2)
    SCALE   =(*PSTATE).SCALE

    DATA_TYPE     =STRTRIM((*PSTATE).DATA_TYPE,2)

    NUM_OF_RANGE    =STRTRIM((*PSTATE).NUM_OF_RANGE,2)
    SENSOR_CODE     =STRTRIM((*PSTATE).SENSOR_CODE,2)
    PERIOD       =STRTRIM((*PSTATE).PERIOD,2)

    CASE SCALE OF
        '全省' :BEGIN
         SCALE_SQL='PROVINCE'
         RANGE_CODE=PROVINCE_CODE
       END
       '自定义监测区':BEGIN
         SCALE_SQL='ROI'
       END
    ENDCASE


    ;把数据库链接取过来
    OD=DBobj

    ;A)先检查该记录是不是已经存在了,如果已经存在,删除
	FOR I=0,(SIZE(ARR_RESULT))[2]/11-1 DO BEGIN
		SQL='DELETE FROM PARAMETER_RT_'+SCALE_SQL
		SQL=SQL+' WHERE  ('+SCALE_SQL+'_CODE = '+"'"+ARR_RESULT[1,I*11]+"' "+')'
    	SQL=SQL+' AND (YEAR = ' + YEAR +')'
    	SQL=SQL+' AND (MONTH = '+ MONTH+')'
    	SQL=SQL+' AND (DAY = '+DAY +')'
    	SQL=SQL+' AND (SENSOR_CODE = '+"'"+SENSOR_CODE +"'"+')'
    	SQL=SQL+' AND (PERIODS = '+PERIOD +')'
    	SQL=SQL+' AND (DATA_TYPE = '+"'"+DATA_TYPE +"'"+')'
    	PRINT,SQL

    	OD->EXECUTESQL,SQL
    ENDFOR

    ;B)插入记号新的记录
    FOR I=0,(SIZE(ARR_RESULT))[2]-1 DO BEGIN

		SQL='INSERT INTO PARAMETER_RT_'+SCALE_SQL
		SQL=SQL+' ('+SCALE_SQL+'_CODE ,YEAR ,MONTH,DAY,'
   		SQL=SQL+'PERCENT_WORSE,PERCENT_LITTLEWORSE,PERCENT_KEEPBALANCE ,
   		SQL=SQL+'PERCENT_LITTLEBETTER,PERCENT_BETTER,LAND_TYPE,SENSOR_CODE,'
   		SQL=SQL+'DATA_TYPE,PERIODS) '
   		SQL=SQL+'VALUES ('+"'"+STRTRIM(STRING(ARR_RESULT[1,I]))+"',"
   		SQL=SQL+STRTRIM(STRING(YEAR),2)	+','
   		SQL=SQL+STRTRIM(STRING(MONTH),2)+','
   		SQL=SQL+STRTRIM(STRING(DAY),2)	+','

   		SQL=SQL+STRTRIM(STRING(ARR_RESULT[3,I]),2)	+','
   		SQL=SQL+STRTRIM(STRING(ARR_RESULT[4,I]),2)	+','
   		SQL=SQL+STRTRIM(STRING(ARR_RESULT[5,I]),2)	+','
   		SQL=SQL+STRTRIM(STRING(ARR_RESULT[6,I]),2)	+','
   		SQL=SQL+STRTRIM(STRING(ARR_RESULT[7,I]),2)	+','
   		SQL=SQL+"'"+STRTRIM(STRING(ARR_RESULT[2,I]),2)+"'"+','
   		SQL=SQL+"'"+STRTRIM(STRING(ARR_RESULT[8,I]),2)+"'"+','
   		SQL=SQL+"'"+DATA_TYPE+"'"+','
   		SQL=SQL+PERIOD+')'
   		PRINT,i,SQL
   		;RETURN,0
   		OD->EXECUTESQL,SQL
	ENDFOR

    MSG=DIALOG_MESSAGE('数据入库完成!',TITLE='提示',/INFORMATION)
    log, '实时监测-汇总', 1
    RETURN, EVENT ; BY DEFAULT, RETURN THE EVENT.

END
;-----------------------------------------------------------------

;
; EMPTY STUB PROCEDURE USED FOR AUTOLOADING.
;
PRO STA_RT_ABOVE_COUNTY_EVENTCB
END
;
; IDL WIDGET INTERFACE PROCEDURES. THIS CODE IS AUTOMATICALLY
;     GENERATED AND SHOULD NOT BE MODIFIED.
;-----------------------------------------------------------------

;-----------------------------------------------------------------
;
; GENERATED ON: 11/17/2004 16:42.38
;
PRO BASE_STA_RT_ABOVE_COUNTY_EVENT, EVENT

	COMMON COMMON_BLOCK,yesORno,DBobj,FILE_PATH,Year_1,DSN,USER_NAME,PWD,PROVINCE_CODE

  WTARGET = (WIDGET_INFO(EVENT.ID,/NAME) EQ 'TREE' ?  $
      WIDGET_INFO(EVENT.ID, /TREE_ROOT) : EVENT.ID)


  WIDGET_CONTROL,EVENT.TOP,GET_UVALUE = PSTATE
  WWIDGET =  EVENT.TOP

  CASE WTARGET OF

    ;在选择自定义监测区时,要将监测区的名称读取出来
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_SCALE_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       SCALE=(*PSTATE).ARR_SCALE[INDEX]
       (*PSTATE).SCALE=SCALE


       PRINT,SCALE
       CASE SCALE OF
         '请选择尺度':BEGIN
          TEMP=BYTARR(12)
          TEMP=STRING(TEMP)
          WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,COLUMN_LABELS=TEMP
          TEMP=0
          WIDGET_CONTROL,(*PSTATE).DST_RANGE_STA_PRO_ABOVE_COUNTY,SET_VALUE=['']
          WIDGET_CONTROL,(*PSTATE).DST_RANGE_STA_PRO_ABOVE_COUNTY,SENSITIVE=0
         END

         '全省':BEGIN
         WIDGET_CONTROL,(*PSTATE).DST_RANGE_STA_PRO_ABOVE_COUNTY,SENSITIVE=1
          WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,COLUMN_LABELS=['名称', '代码',  $
 				'类型','差','稍差','持平','稍好','好','传感器','周期']
               WIDGET_CONTROL,(*PSTATE).DST_RANGE_STA_PRO_ABOVE_COUNTY,SET_VALUE=['全省']

               (*PSTATE).RANGE    ='全省'
               (*PSTATE).NUM_OF_RANGE=1
               (*PSTATE).ARR_RANGE_CODE=[' ']
               (*PSTATE).RANGE_CODE='1'
               (*PSTATE).ARR_RANGE       =['全省']


         END

         '自定义监测区':BEGIN
         WIDGET_CONTROL,(*PSTATE).DST_RANGE_STA_PRO_ABOVE_COUNTY,SENSITIVE=1
          WIDGET_CONTROL,(*PSTATE).TABLE_RESULT,COLUMN_LABELS=['名称', '代码',  $
 				'类型','差','稍差','持平','稍好','好','传感器','周期']

          OD=DBobj
              ORS = OBJ_NEW('IDLDBRECORDSET', OD, TABLE='ROI_CODE')
             ;这里给省的起始的个数是1,而不是0
             ;这是因为第一个选项是'所有省'
             NUM_OF_RANGE=1
          IF(ORS->MOVECURSOR(/FIRST) EQ 1)THEN BEGIN

              ;先找出省的个数
              WHILE (ORS->MOVECURSOR(/NEXT) EQ 1) DO BEGIN
                 NUM_OF_RANGE=NUM_OF_RANGE+1
              ENDWHILE

              ;然后将省的名称读入数组
              ARR_RANGE=STRARR(NUM_OF_RANGE+1)
              ARR_RANGE_CODE=STRARR(NUM_OF_RANGE+1)
              TEMP=ORS->MOVECURSOR(/FIRST)
              COUNT=0
              ARR_RANGE[COUNT]='所有监测区'

              COUNT=COUNT+1
              ARR_RANGE[COUNT]=ORS->GETFIELD(1)
              ARR_RANGE_CODE[COUNT]=ORS->GETFIELD(0)
              WHILE (ORS->MOVECURSOR(/NEXT) EQ 1) DO BEGIN
                 COUNT=COUNT+1
                 ;在读取省名的时候把省的代码也读取了出来
                 ;主要是减少后面的工作量
                 ARR_RANGE[COUNT]=ORS->GETFIELD(1)
                 ARR_RANGE_CODE[COUNT]=ORS->GETFIELD(0)
              ENDWHILE

              WIDGET_CONTROL,(*PSTATE).DST_RANGE_STA_PRO_ABOVE_COUNTY,SET_VALUE=ARR_RANGE
              NUM_OF_RANGE=NUM_OF_RANGE + 1
              (*PSTATE).ARR_RANGE[0:NUM_OF_RANGE-1]=ARR_RANGE[0:NUM_OF_RANGE-1]

              (*PSTATE).ARR_RANGE_CODE[0:NUM_OF_RANGE-1] =ARR_RANGE_CODE[0:NUM_OF_RANGE-1]
              (*PSTATE).NUM_OF_RANGE =NUM_OF_RANGE
              (*PSTATE).RANGE    ='所有监测区'
          ENDIF
          OBJ_DESTROY,ORS
         END
         ELSE:;
       ENDCASE

       RETURN
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_YEAR_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).YEAR=(*PSTATE).ARR_YEAR[INDEX]
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_MONTH_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).MONTH=(*PSTATE).ARR_MONTH[INDEX]
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_DAY_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).DAY=(*PSTATE).ARR_DAY[INDEX]
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_SENSOR_TYPE_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).SENSOR_CODE=(*PSTATE).ARR_SENSOR_CODE[INDEX]
       PRINT,(*PSTATE).SENSOR_CODE
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_period_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).PERIOD=(*PSTATE).ARR_DAY[INDEX]
       PRINT,(*PSTATE).PERIOD
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_DATA_TYPE_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).DATA_TYPE=(*PSTATE).ARR_DATA_TYPE[INDEX]
       PRINT,(*PSTATE).DATA_TYPE
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='DST_RANGE_STA_PRO_ABOVE_COUNTY'): BEGIN
        INDEX=EVENT.INDEX
       (*PSTATE).RANGE=(*PSTATE).ARR_RANGE[INDEX]
       (*PSTATE).RANGE_CODE=(*PSTATE).ARR_RANGE_CODE[INDEX]
       PRINT,(*PSTATE).RANGE
       PRINT,(*PSTATE).RANGE_CODE
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='CMD_ZS_COUNT_STA_RT_ABOVE_COUNTY'): BEGIN
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='CMD_WRITE_STA_RT_ABOVE_COUNTY'): BEGIN
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='CMD_CANCEL_STA_RT_ABOVE_COUNTY'): BEGIN
    common_log,'关闭长势实时汇总'
        CLOSE,/ALL
        WIDGET_CONTROL, EVENT.TOP, /DESTROY
        RETURN
    END
    WIDGET_INFO(WWIDGET, FIND_BY_UNAME='CMD_HELP_STA_RT_ABOVE_COUNTY'): BEGIN

		if file_test('HELP\HELP.chm') then begin
			ONLINE_HELP, '实时监测模块', BOOK='HELP\HELP.chm', /FULL_PATH
		endif else begin
			info_help=dialog_message('找不到帮助文档',title='警告')
		endelse

;        ONLINE_HELP,  BOOK='HELP\HELP.chm', /FULL_PATH,'实时监测模块'
    END
    ELSE:
  ENDCASE

END
;-----------------------------------------------------------------

;-----------------------------------------------------------------

PRO BASE_STA_RT_ABOVE_COUNTY, GROUP_LEADER=WGROUP

  ;避免同一个界面重复出现
  IF ( XREGISTERED('BASE_STA_RT_ABOVE_COUNTY') NE 0 ) THEN RETURN

  RESOLVE_ROUTINE, 'STA_PRO_ABOVE_COUNTY_EVENTCB',/COMPILE_FULL_FILE  ; LOAD EVENT CALLBACK ROUTINES
  TEMP_1=43
  BASE_STA_RT_ABOVE_COUNTY = WIDGET_BASE( GROUP_LEADER=WGROUP,  $
      UNAME='BASE_STA_RT_ABOVE_COUNTY' ,XOFFSET=320 ,YOFFSET=200  $
      ,SCR_XSIZE=463 ,SCR_YSIZE=344+TEMP_1 ,TITLE='实时监测--汇总'  $
      ,SPACE=3 ,XPAD=3 ,YPAD=3 ,TLB_FRAME_ATTR=1)


  BASE_TIME_STA_PRO_ABOVE_COUNTY = Widget_Base(BASE_STA_RT_ABOVE_COUNTY,  $
      UNAME='BASE_TIME_STA_PRO_ABOVE_COUNTY' ,FRAME=1 ,XOFFSET=6  $
      ,YOFFSET=6 ,SCR_XSIZE=443 ,SCR_YSIZE=31 ,TITLE='IDL' ,SPACE=3  $
      ,XPAD=3 ,YPAD=3)


  LBL_TIME_STA_PRO_ABOVE_COUNTY =  $
      Widget_Label(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
      UNAME='LBL_TIME_STA_PRO_ABOVE_COUNTY' ,XOFFSET=6 ,YOFFSET=8  $
      ,SCR_XSIZE=100 ,SCR_YSIZE=19 ,/ALIGN_LEFT ,VALUE='请选择汇总的时间:')

	common current_date, c_year, c_month, c_day
	subbase = widget_base(BASE_TIME_STA_PRO_ABOVE_COUNTY,/row,xpad=3,ypad=3,space=5,XOFFSET=68+60)
	WID_LABEL_date = Widget_text(subbase,xsize=15, $
		VALUE=strtrim(c_year,2)+'-'+strtrim(c_month,2)+'-'+strtrim(c_day,2))
	CMD_pick_date = Widget_Button(subbase,SCR_XSIZE=30,SCR_YSIZE=20,/ALIGN_CENTER, $
		VALUE='.\Image\Calendar.bmp',/BITMAP,EVENT_PRO='ActiveXCal',uvalue={text_id:WID_LABEL_date, pointer:PTR_NEW(), detail:'CMD_pick_date'})


;  LBL_YEAR_STA_PRO_ABOVE_COUNTY =  $
;      Widget_Label(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;      UNAME='LBL_YEAR_STA_PRO_ABOVE_COUNTY' ,XOFFSET=68+45 ,YOFFSET=8  $
;      ,SCR_XSIZE=18 ,SCR_YSIZE=18 ,/ALIGN_LEFT ,VALUE='年:')
;
;
;  LBL_MONTH_STA_PRO_ABOVE_COUNTY =  $
;      Widget_Label(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;      UNAME='LBL_MONTH_STA_PRO_ABOVE_COUNTY' ,XOFFSET=150-37+75 ,YOFFSET=8  $
;      ,SCR_XSIZE=18 ,SCR_YSIZE=18 ,/ALIGN_LEFT ,VALUE='月:')
;
;
;  LBL_DAY_STA_PRO_ABOVE_COUNTY = Widget_Label(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;      UNAME='LBL_DAY_STA_PRO_ABOVE_COUNTY' ,XOFFSET=225-46+75 ,YOFFSET=8  $
;      ,SCR_XSIZE=18 ,SCR_YSIZE=18 ,/ALIGN_LEFT ,VALUE='日:')
;
;
;  DST_YEAR_STA_PRO_ABOVE_COUNTY =  $
;      Widget_Combobox(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;; 	Widget_Droplist(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;      UNAME='DST_YEAR_STA_PRO_ABOVE_COUNTY' ,XOFFSET=90-32+75 ,YOFFSET=4  $
;      ,SCR_XSIZE=49 ,SCR_YSIZE=22)
;
;
;  DST_MONTH_STA_PRO_ABOVE_COUNTY =  $
;      Widget_Droplist(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;      UNAME='DST_MONTH_STA_PRO_ABOVE_COUNTY' ,XOFFSET=170-38+75 ,YOFFSET=4  $
;      ,SCR_XSIZE=40 ,SCR_YSIZE=21)
;
;
;  DST_DAY_STA_PRO_ABOVE_COUNTY =  $
;      Widget_Droplist(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
;      UNAME='DST_DAY_STA_PRO_ABOVE_COUNTY' ,XOFFSET=245-47+75 ,YOFFSET=4  $
;      ,SCR_XSIZE=44 ,SCR_YSIZE=21)


  LBL_period_STA_PRO_ABOVE_COUNTY =  $
      Widget_Label(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
      UNAME='LBL_period_STA_PRO_ABOVE_COUNTY' ,XOFFSET=352 ,YOFFSET=8  $
      ,SCR_XSIZE=29 ,SCR_YSIZE=18 ,/ALIGN_LEFT ,VALUE='周期:')

  DST_period_STA_PRO_ABOVE_COUNTY =  $
      Widget_Droplist(BASE_TIME_STA_PRO_ABOVE_COUNTY,  $
      UNAME='DST_period_STA_PRO_ABOVE_COUNTY' ,XOFFSET=382 ,YOFFSET=4  $
      ,SCR_XSIZE=48 ,SCR_YSIZE=21 )

;***************************************************************************
;修改后的内容
BASE_DATA_PARAMETER = Widget_Base(BASE_STA_RT_ABOVE_COUNTY,  $
      UNAME='BASE_DATA_PARAMETER' ,FRAME=1 ,XOFFSET=6  $
      ,YOFFSET=3+TEMP_1 ,SCR_XSIZE=443 ,SCR_YSIZE=31 ,TITLE='IDL' ,SPACE=3  $
      ,XPAD=3 ,YPAD=3)


  LBL_SENSOR_TYPE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Label(BASE_DATA_PARAMETER,  $
      UNAME='LBL_SENSOR_TYPE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=6 ,YOFFSET=8  $
      ,SCR_XSIZE=100 ,SCR_YSIZE=19 ,/ALIGN_LEFT ,VALUE='请选择传感器类型:')


  DST_SENSOR_TYPE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Droplist(BASE_DATA_PARAMETER,  $
      UNAME='DST_SENSOR_TYPE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=90-32+75 ,YOFFSET=4  $
      ,SCR_XSIZE=100 ,SCR_YSIZE=22)



  LBL_DATA_TYPE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Label(BASE_DATA_PARAMETER,  $
      UNAME='LBL_DATA_TYPE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=352 ,YOFFSET=8  $
      ,SCR_XSIZE=29 ,SCR_YSIZE=18 ,/ALIGN_LEFT ,VALUE='类型:')

  DST_DATA_TYPE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Droplist(BASE_DATA_PARAMETER,  $
      UNAME='DST_DATA_TYPE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=382 ,YOFFSET=4  $
      ,SCR_XSIZE=48 ,SCR_YSIZE=21 )

;***************************************************************************
  BASE_RANGE_STA_PRO_ABOVE_COUNTY = Widget_Base(BASE_STA_RT_ABOVE_COUNTY,  $
      UNAME='BASE_RANGE_STA_PRO_ABOVE_COUNTY' ,FRAME=1 ,XOFFSET=6  $
      ,YOFFSET=6+37+TEMP_1 ,SCR_XSIZE=443 ,SCR_YSIZE=31 ,TITLE='IDL' ,SPACE=3  $
      ,XPAD=3 ,YPAD=3)


  LBL_TIME_STA_PRO_ABOVE_COUNTY =  $
      Widget_Label(BASE_RANGE_STA_PRO_ABOVE_COUNTY,  $
      UNAME='LBL_TIME_STA_PRO_ABOVE_COUNTY' ,XOFFSET=6 ,YOFFSET=8  $
      ,SCR_XSIZE=100 ,SCR_YSIZE=19 ,/ALIGN_LEFT ,VALUE='请选择汇总的尺度:')



  DST_SCALE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Droplist(BASE_RANGE_STA_PRO_ABOVE_COUNTY,  $
      UNAME='DST_SCALE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=90-32+75 ,YOFFSET=4  $
      ,SCR_XSIZE=100 ,SCR_YSIZE=21)




  LBL_RANGE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Label(BASE_RANGE_STA_PRO_ABOVE_COUNTY,  $
      UNAME='LBL_RANGE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=299-40 ,YOFFSET=8  $
      ,SCR_XSIZE=70 ,SCR_YSIZE=18 ,/ALIGN_LEFT ,VALUE='汇总的范围:')


  DST_RANGE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Droplist(BASE_RANGE_STA_PRO_ABOVE_COUNTY,  $
      UNAME='DST_RANGE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=330 ,YOFFSET=4  $
      ,SCR_XSIZE=100 ,SCR_YSIZE=22 ,SENSITIVE=0)


;*********************************************************************************


  TABLE_RESULT_STA_PRO_ABOVE_COUNTY = Widget_Table(BASE_STA_RT_ABOVE_COUNTY,  $
      UNAME='TABLE_RESULT_STA_PRO_ABOVE_COUNTY' ,XOFFSET=7 ,YOFFSET=65+40+TEMP_1  $
      ,SCR_XSIZE=442 ,SCR_YSIZE=148 ,XSIZE=15 ,YSIZE=135,FRAME=1)


  LBL_RESULT_STA_PRO_ABOVE_COUNTY = Widget_Label(BASE_STA_RT_ABOVE_COUNTY,  $
      UNAME='LBL_RESULT_STA_PRO_ABOVE_COUNTY' ,XOFFSET=9 ,YOFFSET=47+40+TEMP_1  $
      ,SCR_XSIZE=111 ,SCR_YSIZE=19 ,/ALIGN_LEFT  $
      ,VALUE='汇总结果显示如下:')


  BASE_CMD_STA_PRO_ABOVE_COUNTY = Widget_Base(BASE_STA_RT_ABOVE_COUNTY,  $
      UNAME='BASE_CMD_STA_PRO_ABOVE_COUNTY' ,FRAME=1 ,XOFFSET=7  $
      ,YOFFSET=233+40+TEMP_1 ,SCR_XSIZE=443 ,SCR_YSIZE=36 ,TITLE='IDL' ,SPACE=3  $
      ,XPAD=3 ,YPAD=3)


  CMD_ZS_COUNT_STA_PRO_ABOVE_COUNTY =  $
      Widget_Button(BASE_CMD_STA_PRO_ABOVE_COUNTY,  $
      UNAME='CMD_ZS_COUNT_STA_PRO_ABOVE_COUNTY' ,XOFFSET=8 ,YOFFSET=6  $
      ,SCR_XSIZE=92 ,SCR_YSIZE=22  $
      ,EVENT_FUNC='CMD_ZS_COUNT_STA_RT_ABOVE_COUNTY' ,/ALIGN_CENTER  $
      ,VALUE='汇总')


  CMD_WRITE_STA_PRO_ABOVE_COUNTY =  $
      Widget_Button(BASE_CMD_STA_PRO_ABOVE_COUNTY,  $
      UNAME='CMD_WRITE_STA_PRO_ABOVE_COUNTY' ,XOFFSET=119 ,YOFFSET=6  $
      ,SCR_XSIZE=92 ,SCR_YSIZE=22  $
      ,EVENT_FUNC='CMD_WRITE_STA_RT_ABOVE_COUNTY' ,/ALIGN_CENTER  $
      ,VALUE='数据入库')


  CMD_CANCEL_STA_RT_ABOVE_COUNTY =  $
      Widget_Button(BASE_CMD_STA_PRO_ABOVE_COUNTY,  $
      UNAME='CMD_CANCEL_STA_RT_ABOVE_COUNTY' ,XOFFSET=339 ,YOFFSET=6  $
      ,SCR_XSIZE=92 ,SCR_YSIZE=22  $
      ,/ALIGN_CENTER  $
      ,VALUE='关闭')


  CMD_HELP_STA_RT_ABOVE_COUNTY =  $
      Widget_Button(BASE_CMD_STA_PRO_ABOVE_COUNTY,  $
      UNAME='CMD_HELP_STA_RT_ABOVE_COUNTY' ,XOFFSET=229 ,YOFFSET=6  $
      ,SCR_XSIZE=92 ,SCR_YSIZE=22  $
      ,/ALIGN_CENTER  $
      ,VALUE='帮助')



  COMMON COMMON_BLOCK,yesORno,DBobj,FILE_PATH,Year,DSN,USER_NAME,PWD,PROVINCE_CODE

year_droplist=strtrim(string(indgen(36)+1980),2)
  STATE={$
		widget_top : BASE_STA_RT_ABOVE_COUNTY,$
        BASE_STA_RT_ABOVE_COUNTY   : BASE_STA_RT_ABOVE_COUNTY   ,$
        DST_RANGE_STA_PRO_ABOVE_COUNTY  :DST_RANGE_STA_PRO_ABOVE_COUNTY  ,$
;       ARR_YEAR   :   [ '1990', '1991', '1992', '1993', '1994', '1995', '1996', '1997', '1998','1999', '2000', '2001', '2002', '2003', '2004', '2005', '2006','2007'] ,$
		ARR_YEAR		:	year_droplist,$
       ARR_MONTH     :  [ '1', '2', '3','4', '5', '6', '7', '8', '9', '10', '11', '12' ],$
       ARR_DAY      :   ['1', '2', '3','4', '5', '6', '7', '8', '9', '10', $
                   '11', '12', '13','14', '15', '16', '17', '18', '19', '20',$
                   '21', '22', '23','24', '25', '26', '27', '28', '29', '30', '31'] ,$

       ARR_DATA_TYPE :   ['NDVI','LAI','NPP'],$
       ARR_SCALE     :  ['请选择尺度','全省','自定义监测区']     ,$

       ARR_RANGE     :  STRARR(150)  ,$
       ARR_RANGE_CODE    :  STRARR(150)  ,$

       YEAR       :  1990 ,$
       MONTH        : 1   ,$
       DAY          :  1    ,$
       SCALE        : '请选择尺度',$
       RANGE        : ''  ,$
       RANGE_CODE       : ''  ,$
       DATA_TYPE     :  'NDVI'   ,$
       TABLE_RESULT  :    TABLE_RESULT_STA_PRO_ABOVE_COUNTY  ,$

       COUNT_DONE       : 0   ,$ ;用一个变量来标志是否进行了汇总运算
       ALL_RANGE     :  1    ,$

       ARR_SENSOR       : [ 'AVHRR', 'MODIS', 'VGT'] ,$
       ARR_SENSOR_CODE   : [ 1, 2, 3] ,$
       SENSOR_CODE     :    1       ,$
       period         :    1       ,$


       NUM_OF_RANGE  :    0  $
       ;表中实际省的个数,包括列表中的其他项,一般情况下为32

;       DBCO_ID      :   yesORno   , $
;       DBCO         :    DBobj  $


         }

  PSTATE=PTR_NEW(STATE,/NO_COPY)
  WIDGET_CONTROL,BASE_STA_RT_ABOVE_COUNTY,SET_UVALUE=PSTATE

	WIDGET_CONTROL, CMD_pick_date, get_uvalue=staff
    staff.pointer = PSTATE
    WIDGET_CONTROL, CMD_pick_date, set_uvalue=staff
  WIDGET_CONTROL, /REALIZE, BASE_STA_RT_ABOVE_COUNTY
  WIDGET_CONTROL,CMD_CANCEL_STA_RT_ABOVE_COUNTY,/INPUT_FOCUS

  ;************************************************************************
  ;给下拉列表赋值,有的数据需要从数据库中读取
;  WIDGET_CONTROL,DST_YEAR_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_YEAR
;  WIDGET_CONTROL,DST_MONTH_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_MONTH
;  WIDGET_CONTROL,DST_DAY_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_DAY
  WIDGET_CONTROL,DST_DATA_TYPE_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_DATA_TYPE

  WIDGET_CONTROL,DST_PERIOD_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_DAY
  WIDGET_CONTROL,DST_SENSOR_TYPE_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_SENSOR

  WIDGET_CONTROL,DST_SCALE_STA_PRO_ABOVE_COUNTY,SET_VALUE=(*PSTATE).ARR_SCALE
  ;************************************************************************
  WIDGET_CONTROL,TABLE_RESULT_STA_PRO_ABOVE_COUNTY,COLUMN_WIDTHS=51
  WIDGET_CONTROL,TABLE_RESULT_STA_PRO_ABOVE_COUNTY,TABLE_XSIZE=10
  WIDGET_CONTROL,TABLE_RESULT_STA_PRO_ABOVE_COUNTY,COLUMN_LABELS=['名称', '代码',  $
 				'类型','差','稍差','持平','稍好','好']
   ;***********************************************************************
  ;为了系统演示所增加的代码
  ;对时间等内容直接进行了定位
  TEMP=1
  IF(TEMP EQ 1)THEN BEGIN
	  	WIDGET_CONTROL,DST_PERIOD_STA_PRO_ABOVE_COUNTY,SET_DROPLIST_SELECT=9

		(*PSTATE).YEAR	=	strtrim(c_year,2)
	  	(*PSTATE).MONTH	=	strtrim(c_month,2)
	  	(*PSTATE).DAY	=	strtrim(c_day,2)
	  	(*PSTATE).PERIOD=	10


  ENDIF
  ;***********************************************************************

  XMANAGER, 'BASE_STA_RT_ABOVE_COUNTY', BASE_STA_RT_ABOVE_COUNTY, /NO_BLOCK, CLEANUP='ZS_PRO_SUM_cleanup'

END
;
; EMPTY STUB PROCEDURE USED FOR AUTOLOADING.
;
PRO ZS_STA_RT_ABOVE_COUNTY,GROUP_LEADER=WGROUP
	common_log,'启动长势实时汇总'
  COMMON COMMON_BASE,MENU_OPERATION,X_OFFSET,Y_OFFSET,BASE_TOP
  BASE_STA_RT_ABOVE_COUNTY, GROUP_LEADER=BASE_TOP
END
